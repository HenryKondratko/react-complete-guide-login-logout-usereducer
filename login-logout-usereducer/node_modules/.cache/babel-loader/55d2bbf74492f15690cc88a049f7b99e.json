{"ast":null,"code":"var _jsxFileName = \"/Users/Swims/Projects/Udemy/React Complete Guide/login-logout-usereducer/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //     emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //     emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"J7zW+KKOf0cNJBphs+G4hpNmlJs=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"sources":["/Users/Swims/Projects/Udemy/React Complete Guide/login-logout-usereducer/src/components/Login/Login.js"],"sourcesContent":["import React, {useState, useEffect, useReducer, useContext} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.includes('@')};\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: state.value.includes('@')};\n    }\n    return {value: '', isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.trim().length > 6};\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: state.value.trim().length > 6};\n    }\n    return {value: '', isValid: false};\n};\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    // const [enteredPassword, setEnteredPassword] = useState('');\n    // const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: null\n    });\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: null\n    });\n\n    const authCtx = useContext(AuthContext);\n\n    useEffect(() => {\n        console.log('EFFECT RUNNING');\n\n        return () => {\n            console.log('EFFECT CLEANUP');\n        };\n    }, []);\n\n    const {isValid: emailIsValid} = emailState;\n    const {isValid: passwordIsValid} = passwordState;\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            console.log('Checking form validity!');\n            setFormIsValid(\n                emailIsValid && passwordIsValid\n            );\n        }, 500);\n\n        return () => {\n            console.log('CLEANUP');\n            clearTimeout(identifier);\n        };\n    }, [emailIsValid, passwordIsValid]);\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n        // setFormIsValid(\n        //     emailState.isValid && passwordState.isValid\n        // );\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n        // setFormIsValid(\n        //     emailState.isValid && passwordState.isValid\n        // );\n    };\n\n    const validateEmailHandler = () => {\n        // setEmailIsValid(emailState.isValid);\n        dispatchEmail({type: 'INPUT_BLUR'});\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({type: 'INPUT_BLUR'})\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        authCtx.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <Input\n                    id=\"email\"\n                    label=\"E-Mail\"\n                    type=\"email\"\n                    isValid={emailIsValid}\n                    value={emailState.value}\n                    onChange={emailChangeHandler}\n                    onBlur={validateEmailHandler}\n                />\n                <Input\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    isValid={passwordIsValid}\n                    value={passwordState.value}\n                    onChange={passwordChangeHandler}\n                    onBlur={validatePasswordHandler}\n                />\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}